---
- name: Yum install gsi-openssh-server
  yum:
    name:
      - gsi-openssh-server
    enablerepo: lscsoft-epel

- name: Enable port 2222
  lineinfile:
    path: /etc/gsissh/sshd_config
    regexp: '^Port 2222'
    insertafter: 'Port 22'
    line: 'Port 2222'

- name: Copy ssh keys command
  copy:
    src: ligo_and_kagra_ssh_keys.sh
    dest: /usr/local/bin/ligo_ssh_keys.sh
    owner: root
    group: root
    mode: '0755'

- name: Enable ssh keys command
  lineinfile:
    path: /etc/gsissh/sshd_config
    regexp: '^#?AuthorizedKeysCommand '
    line: 'AuthorizedKeysCommand /usr/local/bin/ligo_ssh_keys.sh'

- name: Enable ssh keys command user
  lineinfile:
    path: /etc/gsissh/sshd_config
    regexp: '^#?AuthorizedKeysCommandUser '
    line: 'AuthorizedKeysCommandUser nobody'

- name: Disable authorised keys file for everybody except admins
  blockinfile:
    path: /etc/gsissh/sshd_config
    backup: yes
    block: |
      Match Group LIGO
        AuthorizedKeysFile    none

- name: Copy SSH keys
  file:
    src: '/etc/ssh/{{ item }}'
    dest: '/etc/gsissh/{{ item }}'
    state: link
  with_items:
    - ssh_host_ecdsa_key
    - ssh_host_ecdsa_key.pub
    - ssh_host_ed25519_key
    - ssh_host_ed25519_key.pub
    - ssh_host_rsa_key
    - ssh_host_rsa_key.pub

- name: Disable normal SSH
  systemd:
    name: sshd
    state: stopped
    enabled: no

- name: Enable GSI SSH
  systemd:
    name: gsisshd
    state: started
    enabled: yes

- name: Copy SSSD LIGO Config
  template:
    src: "{{ item }}_domain.conf.j2"
    dest: "/etc/sssd/conf.d/{{ item }}.conf"
    owner: root
    group: root
    mode: 0600
  with_items:
    - ligo
    - ligo-operations
    - kagra

- name: Add Ligo domain to sssd
  ini_file:
    path: /etc/sssd/sssd.conf
    section: sssd
    option: domains
    value: ligo.org, ligo-operations, kagra, default
    backup: yes

- name: Make LIGO default Kerberos realm
  ini_file:
    path: /etc/krb5.conf
    section: libdefaults
    option: default_realm
    value: LIGO.ORG
    backup: yes

- name: Modify access file
  lineinfile:
    path: /etc/security/access.conf
    line: '- : ALL EXCEPT ansible root c.mpmds c.sistg1 c.sbisa5 c.whcrm9 c.spxph c.spxdmm (LIGO) : ALL'

# - pause:
#     prompt: "This script will now attempt to extract the host certificate to /etc/grid-security/host{cert,key}.pem if they don't exist."
# 
# - name: extract hostcert.pem
#   command: openssl pkcs12 -in /tmp/certBundle.p12  -out /etc/grid-security/hostcert.pem -nokeys -nodes -passin pass:123412341234
#            creates=/etc/grid-security/hostcert.pem
# 
# - name: extract hostkey.pem
#   command: openssl pkcs12 -in /tmp/certBundle.p12  -out /etc/grid-security/hostkey.pem -nocerts -nodes -passin pass:123412341234
#            creates=/etc/grid-security/hostkey.pem

- name: set hostkey.pem permissions
  file:
    path: /etc/grid-security/hostkey.pem
    mode: '0600'

- name: Yum install ligo-grid-mapfile-manager
  yum: name=ligo-grid-mapfile-manager

- name: Copy LGMM config
  template:
    src: lgmm_config.py.j2
    dest: /etc/lgmm/lgmm_config.py
    owner: root
    group: root
    mode: 0644

- name: Create gridmapfile file
  command: touch /etc/grid-security/grid-mapfile
  args:
    creates: /etc/grid-security/grid-mapfile

- name: Prepare grid-mapfile
  file:
    path: /etc/grid-security/grid-mapfile
    owner: nobody
    group: nobody
    mode: 0644

- name: Copy LGMM whitelist
  template:
    src: lgmm_whitelist.j2
    dest: /etc/grid-security/whitelist
    owner: nobody
    group: nobody
    mode: 0644

- name: Create lgmm log directory
  file:
    path:  /var/log/lgmm
    state: directory
    owner: nobody
    group: nobody
    mode: 0755

- name: Make sure lgmm is running
  service:
    name: lgmm
    state: started
    enabled: yes

- name: add ligo motd
  template:
    src: motd.j2
    dest: /etc/motd
    owner: root
    group: root
    mode: 0744

- name: add ligo default environment
  template:
    src: etc_profile_ligo.sh.j2
    dest: /etc/profile.d/ligo.sh
    owner: root
    group: root
    mode: 0644

- name: Yum install ligo-grid-mapfile-manager
  yum: name=ligo-grid-mapfile-manager

- name: Create /root/bin/ directory
  file:
    path:  /root/bin
    state: directory
    owner: root
    group: root
    mode: 0750

- name: Yum install python36-ldap3
  yum:
    name:
      - python36-ldap3
    enablerepo: lscsoft-epel

- name: Copy ldap script
  copy:
    src: sync_ldap.py
    dest: /root/bin/
    owner: root
    group: root
    mode: 0750

- name: Copy ldap_sync settings
  template:
    src: ligo_scw_sync_ldap_config.py.j2
    dest: /etc/ligo_scw_sync_ldap_config.py
    owner: root
    group: root
    mode: 0600
    variable_start_string: "[%"
    variable_end_string:  "%]"

- name: Create a sync_ldap cron.d file
  cron:
    name: sync_ldap
    minute: "*/20"
    user: root
    job: "/root/bin/sync_ldap.py -mv -l /root/sync_ldap_password.py 2>&1 | mail -Es 'LIGO SCW LDAP Sync CronJob' cardiff-ligo-cluster-admins@cf.onmicrosoft.com"
    cron_file: sync_ldap
