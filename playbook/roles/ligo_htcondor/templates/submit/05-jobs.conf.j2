SYSTEM_JOB_MACHINE_ATTRS = Cpus SlotWeight cpuinfo_model
SYSTEM_JOB_MACHINE_ATTRS_HISTORY_LENGTH = 10

JOB_DEFAULT_REQUESTMEMORY = 2048
MAX_JOBS_RUNNING          = 6000
CLAIM_WORKLIFE            = $(HOUR)

DEFAULT_JOB_MAX_RETRIES   = 1

# try to send jobs back to queue if they were kicked off due to
# another bad apple on their node
SYSTEM_PERIODIC_RELEASE     = ((MemoryUsage < RequestMemory) && HoldReasonCode =?= 34 ) || (( HoldReasonCode =?= 6 ) && ( HoldReasonSubCode =?= 107 )) 

SYSTEM_PERIODIC_REMOVE      = (JobStatus == 5) && (time() - EnteredCurrentStatus > 90*$(DAY))

SYSTEM_PERIODIC_HOLD = (NumShadowExceptions > 20) || (NumShadowStarts > 100) || ((JobStatus == 1 || JobStatus == 2) && (MemoryUsage > 1.5*RequestMemory))|| ( JobUniverse != 7 && ( (RemoteWallClockTime+time()-ShadowBday)/86400 > 45*$(DAY) ) && GrantedExtension != True )

SYSTEM_PERIODIC_HOLD_REASON = ifThenElse(MemoryUsage > 1.5*RequestMemory, \
			                 strcat("MemoryUsage ", MemoryUsage, " MB > RequestMemory ", RequestMemory, " MB."), \
			      ifThenElse((RemoteWallClockTime+time()-ShadowBday)/86400 > 45*$(DAY), \
					 "Job exceeded execution time of 45 days. Please contact grav-it@astro.cf.ac.uk", \
			      ifThenElse((NumShadowExceptions > 20) || (NumShadowStarts > 100), \
					 strcat("NumShadowExceptions: ", NumShadowExceptions, " > 20 or NumShadowStarts: ", NumShadowStarts, " > 100"), \
					 "")))
