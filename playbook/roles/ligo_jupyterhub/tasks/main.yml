---
- name: install jupyterhub deps
  yum:
    name:
      - nodejs
      - npm
      - systemd
    state: installed

- name: create Jupyterhub group for sudospawner
  group:
    name: "{{ jupyter_server_sudo_group }}"
    state: present

- name: create Jupyterhub user
  user:
    name: "{{ jupyter_server_user }}"
    comment: "jupyterhub server user"
    system: "yes"
    state: present
    createhome: "no"
    shell: /sbin/nologin
    groups: "{{ jupyter_server_sudo_group }}"

- name: copy jupyterhub sudoers file
  template:
    src: jupyterhub.sudofile.j2
    dest: /etc/sudoers.d/jupyterhub
    owner: root
    group: root
    mode: "0644"
    validate: /usr/sbin/visudo -cf %s

- name: create jupyterhub config directory
  file:
    path: "{{ jupyterhub_config_directory }}"
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: copy Jupyter config file over
  template:
    src: jupyterhub_config.py.j2
    dest: "{{ jupyterhub_config_directory }}/jupyterhub_config.py"
    owner: "{{ jupyter_server_user }}"
    group: root
    mode: "0644"

- name: create temporary directory
  tempfile:
    state: directory
    suffix: jupyterhub
  register: jupyterhub_tempdir

- name: copy jupyterhub environment file
  copy:
    src: jupyterhub-environment.yml
    dest: "{{ jupyterhub_tempdir.path }}/environment.yml"
    owner: root
    group: root
    mode: "0644"
  register: jupyterhub_environment_yaml

- name: check jupyterhub environment exists
  stat:
    path: "{{ jupyterhub_prefix }}"
  register: jupyterhub_environment

- name: create jupyterhub environment
  command: "{{ miniconda_conda_bin }} env create
    --file {{ jupyterhub_environment_yaml.dest }}
    --prefix {{ jupyterhub_prefix }}
    --quiet"
  when: not jupyterhub_environment.stat.exists

- name: update jupyterhub environment
  command: "{{ miniconda_conda_bin }} env update
    --file {{ jupyterhub_environment_yaml.dest }}
    --prefix {{ jupyterhub_prefix }}
    --quiet"
  when: jupyterhub_environment.stat.exists

- name: delete tempdir
  file:
    path: "{{ jupyterhub_tempdir.path }}"
    state: absent

- name: copy Jupyter sudospawner config file over
  template:
    src: sudospawner-singleuser.j2
    dest: "{{ jupyterhub_prefix }}/bin/sudospawner-singleuser"
    owner: root
    group: root
    mode: "0755"

- name: copy systemd service file over
  template:
    src: jupyterhub.service.j2
    dest: /lib/systemd/system/jupyterhub.service
    owner: root
    group: root
    mode: "0744"

- name: copy jupyter httpd conf
  template:
    src: jupyterhub_httpd.conf.j2
    dest: /etc/httpd/conf.d/jupyter.conf
    owner: root
    group: root
    mode: "0644"

- name: copy static jupyter kernels
  copy:
    src: kernels
    dest: "{{ jupyterhub_datadir }}"
    owner: root
    group: root
    mode: preserve

- name: provision IGWN jupyter kernels
  file:
    path: "{{ jupyterhub_datadir }}/kernels/{{ item }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
  with_items:
    - "{{ igwn_env_name }}"

- name: create IGWN jupyter kernel.json
  template:
    src: kernel.json.j2
    dest: "{{ jupyterhub_datadir }}/kernels/{{ item }}/kernel.json"
  with_items:
    - "{{ igwn_env_name }}"

- name: create IGWN jupyter start.sh
  template:
    src: start.sh.j2
    dest: "{{ jupyterhub_datadir }}/kernels/{{ item }}/start.sh"
  with_items:
    - "{{ igwn_env_name }}"

- name: create IGWN jupyter logo
  copy:
    src: igwn-logo-64x64.png
    dest: "{{ jupyterhub_datadir }}/kernels/{{ item }}/logo-64x64.png"
  with_items:
    - "{{ igwn_env_name }}"

- name: start jupyterhub service
  service:
    name: jupyterhub
    state: started
    enabled: yes
